<?xml version="1.0" encoding="UTF-8" ?>
<!--  note among other sna-foos when trying to port to JPA
  I have found that you can't even use JPQL with entities that are mapped
  through hibernate mappings.   Since I need to use hibernate mappings to do 
  interfaces for some of my internal entity fields (since I have been doing this 
  with hibernate for several years), I can't even use JPQL in my code :(
  
  So I am still recommending straight SQL and Hibernate mappings,
  hopefully JPA 3 will fix some of these problems.
  
  I think JPA now needs 
  nativeQueries (which will are really native ie SQL)
  providerQueries (which are in the providers query language ie HQL)
  and
  japQueries (in the case where you used JPA mappings then you can finally use JPQL) 
 -->
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm classpath:/org/adligo/i/storage/orm_2_0.xsd"
    version="2.0">
    <description>Simple ORM</description>
    <package>org.adligo.xml.parsers.template_jpa_tests</package>
    <entity class="JpaMockPerson" name="persons">
        <table name="persons"/>
        <attributes>
            <id name="tid" >
                <column name="tid" />
            </id>
            <basic name="version"/>
            <basic name="edited"/>
            <basic name="edited_by"/>
            <basic name="fname"/>
	        <basic name="mname"/>
	        <basic name="lname"/>
	        <basic name="nickname"/>
	        <basic name="birthday"/>
        </attributes>
    </entity>
    
     <entity class="JpaMockPersonToAddress" name="persons_to_addresses">
        <table name="persons_to_addresses"/>
        <attributes>
            <id name="tid" >
                <column name="tid" />
            </id>
            <basic name="person"/>
            <basic name="address"/>
            <basic name="type"/>
        </attributes>
    </entity>

     <entity class="JpaMockAddress" name="addresses">
        <table name="addresses"/>
        <attributes>
            <id name="tid" >
                <column name="tid" />
            </id>
            <basic name="version"/>
            <basic name="country"/>
            <basic name="sub"/>
            
            <basic name="city"/>
            <basic name="zip"/>
            <basic name="address"/>
            
            <basic name="unit"/>
            <basic name="edited"/>
            <basic name="edited_by"/>
            
        </attributes>
    </entity>    
</entity-mappings>